plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'carrotmoa'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.projectreactor:reactor-test'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    runtimeOnly 'org.springframework.boot:spring-boot-devtools:3.3.4'
//    implementation 'org.springframework.boot:spring-boot-devtools:3.3.4'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.4'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.3.4'

    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.3.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    implementation group: 'io.awspring.cloud', name: 'spring-cloud-aws-starter', version: '3.2.0'
    implementation group: 'software.amazon.awssdk', name: 's3', version: '2.20.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // aop 추가
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // spring retry 관련
    // https://velog.io/@ssuh0o0/Spring-Spring-Retry
    implementation 'org.springframework.retry:spring-retry'  // 최신 버전으로 설정
    implementation 'org.springframework:spring-aspects'
}

tasks.named('test') {
    useJUnitPlatform()
    systemProperty 'jasypt.encryptor.password', findProperty("jasypt.encryptor.password")
}


// bootJar 태스크 추가
bootJar {
    archiveBaseName = 'carrot-moa' // JAR 파일의 이름
    archiveVersion = '0.0.1-SNAPSHOT' // JAR 파일의 버전
    mainClass = "carrotmoa.carrotmoa.CarrotMoaApplication" // main 클래스 이름
}
